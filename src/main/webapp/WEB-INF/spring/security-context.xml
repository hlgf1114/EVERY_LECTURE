<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<security:http pattern="/css/**" security="none"/>
	<security:http pattern="/img/**" security="none"/>
	<security:http pattern="/js/**" security="none"/>
	<security:http pattern="/uploads/**" security="none"/>
	
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		<!-- 로그인 세션을 가진 사용자만 접근 가능한 것 -->
		<security:intercept-url pattern="/login/admin/**" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/login/login*.jsp" access="hasRole('USER')"/>
		
		<!-- 세션 관리 -->
		<security:session-management invalid-session-url="/">
			<!-- 동일 ID의 최대 세션 개수는 1개 -->
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
		</security:session-management>
		
		<!-- 로그인시 -->
		<security:form-login 
			login-page="/login/userLogin/"
			default-target-url="/login/userLoginSuccess"
			username-parameter="username"
			password-parameter="password"
			authentication-failure-url="/login/loginFailure"
		/>
		
		<security:logout
			invalidate-session="true"
			logout-success-url="/index"
			delete-cookies="JESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
		/>
		
		<security:csrf disabled="true"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<!-- users-by-username-query: ID에 따른 비밀번호 일치여부 확인 -->
			<!-- authorities-by-username-query: 로그인에 성공한 사용자의 권한을 확인하여 접근 가능 / 불가 페이지를 구분해서 접근 -->
			
			<!-- 아직 퀴리 수정 안했음 -->
			<security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select memId as username, memPwd as password,
				memEnabled as enabled from member where memId = ?"
				authorities-by-username-query="select memId as username, memAuthoritiy as authority,
				from member where memId = ?"
			/>		
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
