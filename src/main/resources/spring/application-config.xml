<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<!-- 	<context:property-placeholder location="classpath:/database/jdbc.properties"/> -->
	<context:component-scan base-package="com.goldenbrothers.everylecture"/>
	
	<!-- 암호화된 JDBC 연결을 위해서 -->
	<bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="locations">
			<list>
				<value>classpath:/database/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="environmentVariablesConfiguration"
		class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" />
	</bean>

	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="environmentVariablesConfiguration" />
		<property name="password" value="goldenbrothers" />
	</bean>	


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	 <!-- MultipartResolver 설정 -->
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<property name="maxUploadSize" value="100000000" />
	 	<property name="maxInMemorySize" value="100000000" />
 	</bean>
	
	<!-- MyBatis 사용을 위해 -->
	<bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="mapperLocations" value="classpath:com/goldenbrothers/**/*.xml" />
	</bean>
	
	<mybatis-spring:scan base-package="com.goldenbrothers.everylecture.*.dao"/>
	
<!-- 	<bean id="sqlSession" name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"  -->
<!-- 	destroy-method="clearCache"> -->
<!-- 	    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!-- 	</bean> -->
		
	
<!-- 	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> -->
<!-- 		<property name="dataSource" ref="dataSource"/> -->
<!-- 	</bean> -->
	
	
	<!-- AspectJ Weaver AOP -->
	<bean id="performanceAspect" class="com.goldenbrothers.everylecture.Utils.PerformanceAspect"/>
	
	<aop:config>
		<aop:aspect id="performanceAspect" ref="performanceAspect">
			<!-- com.goldenbrothers.everylecture 내 모든 함수에서 실행 -->
			<aop:pointcut expression="within(com.goldenbrothers.everylecture.*)" id="timeElapse"/>
			<!-- when 전후 what:trace() 메소드 -->
			<aop:around method="trace" pointcut-ref="timeElapse"/>
		</aop:aspect>
	</aop:config>
</beans>
